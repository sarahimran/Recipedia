{"ast":null,"code":"'use strict';\n\nvar httpProxy = require('http-proxy');\n\nvar net = require('net');\n\nvar url = require('url');\n\nvar regexp_tld = require(\"./regexp-top-level-domain\");\n\nvar getProxyForUrl = require('proxy-from-env').getProxyForUrl;\n\nvar help_text = {};\n\nfunction showUsage(help_file, headers, response) {\n  var isHtml = /\\.html$/.test(help_file);\n  headers['content-type'] = isHtml ? 'text/html' : 'text/plain';\n\n  if (help_text[help_file] != null) {\n    response.writeHead(200, headers);\n    response.end(help_text[help_file]);\n  } else {\n    require('fs').readFile(help_file, 'utf8', function (err, data) {\n      if (err) {\n        console.error(err);\n        response.writeHead(500, headers);\n        response.end();\n      } else {\n        help_text[help_file] = data;\n        showUsage(help_file, headers, response);\n      }\n    });\n  }\n}\n\nfunction isValidHostName(hostname) {\n  return !!(regexp_tld.test(hostname) || net.isIPv4(hostname) || net.isIPv6(hostname));\n}\n\nfunction withCORS(headers, request) {\n  headers['access-control-allow-origin'] = '*';\n  var corsMaxAge = request.corsAnywhereRequestState.corsMaxAge;\n\n  if (request.method === 'OPTIONS' && corsMaxAge) {\n    headers['access-control-max-age'] = corsMaxAge;\n  }\n\n  if (request.headers['access-control-request-method']) {\n    headers['access-control-allow-methods'] = request.headers['access-control-request-method'];\n    delete request.headers['access-control-request-method'];\n  }\n\n  if (request.headers['access-control-request-headers']) {\n    headers['access-control-allow-headers'] = request.headers['access-control-request-headers'];\n    delete request.headers['access-control-request-headers'];\n  }\n\n  headers['access-control-expose-headers'] = Object.keys(headers).join(',');\n  return headers;\n}\n\nfunction proxyRequest(req, res, proxy) {\n  var location = req.corsAnywhereRequestState.location;\n  req.url = location.path;\n  var proxyOptions = {\n    changeOrigin: false,\n    prependPath: false,\n    target: location,\n    headers: {\n      host: location.host\n    },\n    buffer: {\n      pipe: function pipe(proxyReq) {\n        var proxyReqOn = proxyReq.on;\n\n        proxyReq.on = function (eventName, listener) {\n          if (eventName !== 'response') {\n            return proxyReqOn.call(this, eventName, listener);\n          }\n\n          return proxyReqOn.call(this, 'response', function (proxyRes) {\n            if (onProxyResponse(proxy, proxyReq, proxyRes, req, res)) {\n              try {\n                listener(proxyRes);\n              } catch (err) {\n                proxyReq.emit('error', err);\n              }\n            }\n          });\n        };\n\n        return req.pipe(proxyReq);\n      }\n    }\n  };\n  var proxyThroughUrl = req.corsAnywhereRequestState.getProxyForUrl(location.href);\n\n  if (proxyThroughUrl) {\n    proxyOptions.target = proxyThroughUrl;\n    proxyOptions.toProxy = true;\n    req.url = location.href;\n  }\n\n  try {\n    proxy.web(req, res, proxyOptions);\n  } catch (err) {\n    proxy.emit('error', err, req, res);\n  }\n}\n\nfunction onProxyResponse(proxy, proxyReq, proxyRes, req, res) {\n  var requestState = req.corsAnywhereRequestState;\n  var statusCode = proxyRes.statusCode;\n\n  if (!requestState.redirectCount_) {\n    res.setHeader('x-request-url', requestState.location.href);\n  }\n\n  if (statusCode === 301 || statusCode === 302 || statusCode === 303 || statusCode === 307 || statusCode === 308) {\n    var locationHeader = proxyRes.headers.location;\n    var parsedLocation;\n\n    if (locationHeader) {\n      locationHeader = url.resolve(requestState.location.href, locationHeader);\n      parsedLocation = parseURL(locationHeader);\n    }\n\n    if (parsedLocation) {\n      if (statusCode === 301 || statusCode === 302 || statusCode === 303) {\n        requestState.redirectCount_ = requestState.redirectCount_ + 1 || 1;\n\n        if (requestState.redirectCount_ <= requestState.maxRedirects) {\n          res.setHeader('X-CORS-Redirect-' + requestState.redirectCount_, statusCode + ' ' + locationHeader);\n          req.method = 'GET';\n          req.headers['content-length'] = '0';\n          delete req.headers['content-type'];\n          requestState.location = parsedLocation;\n          req.removeAllListeners();\n          proxyReq.removeAllListeners('error');\n          proxyReq.once('error', function catchAndIgnoreError() {});\n          proxyReq.abort();\n          proxyRequest(req, res, proxy);\n          return false;\n        }\n      }\n\n      proxyRes.headers.location = requestState.proxyBaseUrl + '/' + locationHeader;\n    }\n  }\n\n  delete proxyRes.headers['set-cookie'];\n  delete proxyRes.headers['set-cookie2'];\n  proxyRes.headers['x-final-url'] = requestState.location.href;\n  withCORS(proxyRes.headers, req);\n  return true;\n}\n\nfunction parseURL(req_url) {\n  var match = req_url.match(/^(?:(https?:)?\\/\\/)?(([^\\/?]+?)(?::(\\d{0,5})(?=[\\/?]|$))?)([\\/?][\\S\\s]*|$)/i);\n\n  if (!match) {\n    return null;\n  }\n\n  if (!match[1]) {\n    if (/^https?:/i.test(req_url)) {\n      return null;\n    }\n\n    if (req_url.lastIndexOf('//', 0) === -1) {\n      req_url = '//' + req_url;\n    }\n\n    req_url = (match[4] === '443' ? 'https:' : 'http:') + req_url;\n  }\n\n  var parsed = url.parse(req_url);\n\n  if (!parsed.hostname) {\n    return null;\n  }\n\n  return parsed;\n}\n\nfunction getHandler(options, proxy) {\n  var corsAnywhere = {\n    handleInitialRequest: null,\n    getProxyForUrl: getProxyForUrl,\n    maxRedirects: 5,\n    originBlacklist: [],\n    originWhitelist: [],\n    checkRateLimit: null,\n    redirectSameOrigin: false,\n    requireHeader: null,\n    removeHeaders: [],\n    setHeaders: {},\n    corsMaxAge: 0,\n    helpFile: __dirname + '/help.txt'\n  };\n  Object.keys(corsAnywhere).forEach(function (option) {\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\n      corsAnywhere[option] = options[option];\n    }\n  });\n\n  if (corsAnywhere.requireHeader) {\n    if (typeof corsAnywhere.requireHeader === 'string') {\n      corsAnywhere.requireHeader = [corsAnywhere.requireHeader.toLowerCase()];\n    } else if (!Array.isArray(corsAnywhere.requireHeader) || corsAnywhere.requireHeader.length === 0) {\n      corsAnywhere.requireHeader = null;\n    } else {\n      corsAnywhere.requireHeader = corsAnywhere.requireHeader.map(function (headerName) {\n        return headerName.toLowerCase();\n      });\n    }\n  }\n\n  var hasRequiredHeaders = function hasRequiredHeaders(headers) {\n    return !corsAnywhere.requireHeader || corsAnywhere.requireHeader.some(function (headerName) {\n      return Object.hasOwnProperty.call(headers, headerName);\n    });\n  };\n\n  return function (req, res) {\n    req.corsAnywhereRequestState = {\n      getProxyForUrl: corsAnywhere.getProxyForUrl,\n      maxRedirects: corsAnywhere.maxRedirects,\n      corsMaxAge: corsAnywhere.corsMaxAge\n    };\n    var cors_headers = withCORS({}, req);\n\n    if (req.method === 'OPTIONS') {\n      res.writeHead(200, cors_headers);\n      res.end();\n      return;\n    }\n\n    var location = parseURL(req.url.slice(1));\n\n    if (corsAnywhere.handleInitialRequest && corsAnywhere.handleInitialRequest(req, res, location)) {\n      return;\n    }\n\n    if (!location) {\n      if (/^\\/https?:\\/[^/]/i.test(req.url)) {\n        res.writeHead(400, 'Missing slash', cors_headers);\n        res.end('The URL is invalid: two slashes are needed after the http(s):.');\n        return;\n      }\n\n      showUsage(corsAnywhere.helpFile, cors_headers, res);\n      return;\n    }\n\n    if (location.host === 'iscorsneeded') {\n      res.writeHead(200, {\n        'Content-Type': 'text/plain'\n      });\n      res.end('no');\n      return;\n    }\n\n    if (location.port > 65535) {\n      res.writeHead(400, 'Invalid port', cors_headers);\n      res.end('Port number too large: ' + location.port);\n      return;\n    }\n\n    if (!/^\\/https?:/.test(req.url) && !isValidHostName(location.hostname)) {\n      res.writeHead(404, 'Invalid host', cors_headers);\n      res.end('Invalid host: ' + location.hostname);\n      return;\n    }\n\n    if (!hasRequiredHeaders(req.headers)) {\n      res.writeHead(400, 'Header required', cors_headers);\n      res.end('Missing required request header. Must specify one of: ' + corsAnywhere.requireHeader);\n      return;\n    }\n\n    var origin = req.headers.origin || '';\n\n    if (corsAnywhere.originBlacklist.indexOf(origin) >= 0) {\n      res.writeHead(403, 'Forbidden', cors_headers);\n      res.end('The origin \"' + origin + '\" was blacklisted by the operator of this proxy.');\n      return;\n    }\n\n    if (corsAnywhere.originWhitelist.length && corsAnywhere.originWhitelist.indexOf(origin) === -1) {\n      res.writeHead(403, 'Forbidden', cors_headers);\n      res.end('The origin \"' + origin + '\" was not whitelisted by the operator of this proxy.');\n      return;\n    }\n\n    var rateLimitMessage = corsAnywhere.checkRateLimit && corsAnywhere.checkRateLimit(origin);\n\n    if (rateLimitMessage) {\n      res.writeHead(429, 'Too Many Requests', cors_headers);\n      res.end('The origin \"' + origin + '\" has sent too many requests.\\n' + rateLimitMessage);\n      return;\n    }\n\n    if (corsAnywhere.redirectSameOrigin && origin && location.href[origin.length] === '/' && location.href.lastIndexOf(origin, 0) === 0) {\n      cors_headers.vary = 'origin';\n      cors_headers['cache-control'] = 'private';\n      cors_headers.location = location.href;\n      res.writeHead(301, 'Please use a direct request', cors_headers);\n      res.end();\n      return;\n    }\n\n    var isRequestedOverHttps = req.connection.encrypted || /^\\s*https/.test(req.headers['x-forwarded-proto']);\n    var proxyBaseUrl = (isRequestedOverHttps ? 'https://' : 'http://') + req.headers.host;\n    corsAnywhere.removeHeaders.forEach(function (header) {\n      delete req.headers[header];\n    });\n    Object.keys(corsAnywhere.setHeaders).forEach(function (header) {\n      req.headers[header] = corsAnywhere.setHeaders[header];\n    });\n    req.corsAnywhereRequestState.location = location;\n    req.corsAnywhereRequestState.proxyBaseUrl = proxyBaseUrl;\n    proxyRequest(req, res, proxy);\n  };\n}\n\nexports.createServer = function createServer(options) {\n  options = options || {};\n  var httpProxyOptions = {\n    xfwd: true,\n    secure: process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0'\n  };\n\n  if (options.httpProxyOptions) {\n    Object.keys(options.httpProxyOptions).forEach(function (option) {\n      httpProxyOptions[option] = options.httpProxyOptions[option];\n    });\n  }\n\n  var proxy = httpProxy.createServer(httpProxyOptions);\n  var requestHandler = getHandler(options, proxy);\n  var server;\n\n  if (options.httpsOptions) {\n    server = require('https').createServer(options.httpsOptions, requestHandler);\n  } else {\n    server = require('http').createServer(requestHandler);\n  }\n\n  proxy.on('error', function (err, req, res) {\n    if (res.headersSent) {\n      if (res.writableEnded === false) {\n        res.end();\n      }\n\n      return;\n    }\n\n    var headerNames = res.getHeaderNames ? res.getHeaderNames() : Object.keys(res._headers || {});\n    headerNames.forEach(function (name) {\n      res.removeHeader(name);\n    });\n    res.writeHead(404, {\n      'Access-Control-Allow-Origin': '*'\n    });\n    res.end('Not found because of proxy error: ' + err);\n  });\n  return server;\n};","map":{"version":3,"sources":["C:/Users/zohai/Downloads/UniversityCourses/appDev/frontEnd/Recipedia/cors-anywhere/lib/cors-anywhere.js"],"names":["httpProxy","require","net","url","regexp_tld","getProxyForUrl","help_text","showUsage","help_file","headers","response","isHtml","test","writeHead","end","readFile","err","data","console","error","isValidHostName","hostname","isIPv4","isIPv6","withCORS","request","corsMaxAge","corsAnywhereRequestState","method","Object","keys","join","proxyRequest","req","res","proxy","location","path","proxyOptions","changeOrigin","prependPath","target","host","buffer","pipe","proxyReq","proxyReqOn","on","eventName","listener","call","proxyRes","onProxyResponse","emit","proxyThroughUrl","href","toProxy","web","requestState","statusCode","redirectCount_","setHeader","locationHeader","parsedLocation","resolve","parseURL","maxRedirects","removeAllListeners","once","catchAndIgnoreError","abort","proxyBaseUrl","req_url","match","lastIndexOf","parsed","parse","getHandler","options","corsAnywhere","handleInitialRequest","originBlacklist","originWhitelist","checkRateLimit","redirectSameOrigin","requireHeader","removeHeaders","setHeaders","helpFile","__dirname","forEach","option","prototype","hasOwnProperty","toLowerCase","Array","isArray","length","map","headerName","hasRequiredHeaders","some","cors_headers","slice","port","origin","indexOf","rateLimitMessage","vary","isRequestedOverHttps","connection","encrypted","header","exports","createServer","httpProxyOptions","xfwd","secure","process","env","NODE_TLS_REJECT_UNAUTHORIZED","requestHandler","server","httpsOptions","headersSent","writableEnded","headerNames","getHeaderNames","_headers","name","removeHeader"],"mappings":"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","sourcesContent":["// © 2013 - 2016 Rob Wu <rob@robwu.nl>\r\n// Released under the MIT license\r\n\r\n'use strict';\r\n\r\nvar httpProxy = require('http-proxy');\r\nvar net = require('net');\r\nvar url = require('url');\r\nvar regexp_tld = require('./regexp-top-level-domain');\r\nvar getProxyForUrl = require('proxy-from-env').getProxyForUrl;\r\n\r\nvar help_text = {};\r\nfunction showUsage(help_file, headers, response) {\r\n  var isHtml = /\\.html$/.test(help_file);\r\n  headers['content-type'] = isHtml ? 'text/html' : 'text/plain';\r\n  if (help_text[help_file] != null) {\r\n    response.writeHead(200, headers);\r\n    response.end(help_text[help_file]);\r\n  } else {\r\n    require('fs').readFile(help_file, 'utf8', function(err, data) {\r\n      if (err) {\r\n        console.error(err);\r\n        response.writeHead(500, headers);\r\n        response.end();\r\n      } else {\r\n        help_text[help_file] = data;\r\n        showUsage(help_file, headers, response); // Recursive call, but since data is a string, the recursion will end\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Check whether the specified hostname is valid.\r\n *\r\n * @param hostname {string} Host name (excluding port) of requested resource.\r\n * @return {boolean} Whether the requested resource can be accessed.\r\n */\r\nfunction isValidHostName(hostname) {\r\n  return !!(\r\n    regexp_tld.test(hostname) ||\r\n    net.isIPv4(hostname) ||\r\n    net.isIPv6(hostname)\r\n  );\r\n}\r\n\r\n/**\r\n * Adds CORS headers to the response headers.\r\n *\r\n * @param headers {object} Response headers\r\n * @param request {ServerRequest}\r\n */\r\nfunction withCORS(headers, request) {\r\n  headers['access-control-allow-origin'] = '*';\r\n  var corsMaxAge = request.corsAnywhereRequestState.corsMaxAge;\r\n  if (request.method === 'OPTIONS' && corsMaxAge) {\r\n    headers['access-control-max-age'] = corsMaxAge;\r\n  }\r\n  if (request.headers['access-control-request-method']) {\r\n    headers['access-control-allow-methods'] = request.headers['access-control-request-method'];\r\n    delete request.headers['access-control-request-method'];\r\n  }\r\n  if (request.headers['access-control-request-headers']) {\r\n    headers['access-control-allow-headers'] = request.headers['access-control-request-headers'];\r\n    delete request.headers['access-control-request-headers'];\r\n  }\r\n\r\n  headers['access-control-expose-headers'] = Object.keys(headers).join(',');\r\n\r\n  return headers;\r\n}\r\n\r\n/**\r\n * Performs the actual proxy request.\r\n *\r\n * @param req {ServerRequest} Incoming http request\r\n * @param res {ServerResponse} Outgoing (proxied) http request\r\n * @param proxy {HttpProxy}\r\n */\r\nfunction proxyRequest(req, res, proxy) {\r\n  var location = req.corsAnywhereRequestState.location;\r\n  req.url = location.path;\r\n\r\n  var proxyOptions = {\r\n    changeOrigin: false,\r\n    prependPath: false,\r\n    target: location,\r\n    headers: {\r\n      host: location.host,\r\n    },\r\n    // HACK: Get hold of the proxyReq object, because we need it later.\r\n    // https://github.com/nodejitsu/node-http-proxy/blob/v1.11.1/lib/http-proxy/passes/web-incoming.js#L144\r\n    buffer: {\r\n      pipe: function(proxyReq) {\r\n        var proxyReqOn = proxyReq.on;\r\n        // Intercepts the handler that connects proxyRes to res.\r\n        // https://github.com/nodejitsu/node-http-proxy/blob/v1.11.1/lib/http-proxy/passes/web-incoming.js#L146-L158\r\n        proxyReq.on = function(eventName, listener) {\r\n          if (eventName !== 'response') {\r\n            return proxyReqOn.call(this, eventName, listener);\r\n          }\r\n          return proxyReqOn.call(this, 'response', function(proxyRes) {\r\n            if (onProxyResponse(proxy, proxyReq, proxyRes, req, res)) {\r\n              try {\r\n                listener(proxyRes);\r\n              } catch (err) {\r\n                // Wrap in try-catch because an error could occur:\r\n                // \"RangeError: Invalid status code: 0\"\r\n                // https://github.com/Rob--W/cors-anywhere/issues/95\r\n                // https://github.com/nodejitsu/node-http-proxy/issues/1080\r\n\r\n                // Forward error (will ultimately emit the 'error' event on our proxy object):\r\n                // https://github.com/nodejitsu/node-http-proxy/blob/v1.11.1/lib/http-proxy/passes/web-incoming.js#L134\r\n                proxyReq.emit('error', err);\r\n              }\r\n            }\r\n          });\r\n        };\r\n        return req.pipe(proxyReq);\r\n      },\r\n    },\r\n  };\r\n\r\n  var proxyThroughUrl = req.corsAnywhereRequestState.getProxyForUrl(location.href);\r\n  if (proxyThroughUrl) {\r\n    proxyOptions.target = proxyThroughUrl;\r\n    proxyOptions.toProxy = true;\r\n    // If a proxy URL was set, req.url must be an absolute URL. Then the request will not be sent\r\n    // directly to the proxied URL, but through another proxy.\r\n    req.url = location.href;\r\n  }\r\n\r\n  // Start proxying the request\r\n  try {\r\n    proxy.web(req, res, proxyOptions);\r\n  } catch (err) {\r\n    proxy.emit('error', err, req, res);\r\n  }\r\n}\r\n\r\n/**\r\n * This method modifies the response headers of the proxied response.\r\n * If a redirect is detected, the response is not sent to the client,\r\n * and a new request is initiated.\r\n *\r\n * client (req) -> CORS Anywhere -> (proxyReq) -> other server\r\n * client (res) <- CORS Anywhere <- (proxyRes) <- other server\r\n *\r\n * @param proxy {HttpProxy}\r\n * @param proxyReq {ClientRequest} The outgoing request to the other server.\r\n * @param proxyRes {ServerResponse} The response from the other server.\r\n * @param req {IncomingMessage} Incoming HTTP request, augmented with property corsAnywhereRequestState\r\n * @param req.corsAnywhereRequestState {object}\r\n * @param req.corsAnywhereRequestState.location {object} See parseURL\r\n * @param req.corsAnywhereRequestState.getProxyForUrl {function} See proxyRequest\r\n * @param req.corsAnywhereRequestState.proxyBaseUrl {string} Base URL of the CORS API endpoint\r\n * @param req.corsAnywhereRequestState.maxRedirects {number} Maximum number of redirects\r\n * @param req.corsAnywhereRequestState.redirectCount_ {number} Internally used to count redirects\r\n * @param res {ServerResponse} Outgoing response to the client that wanted to proxy the HTTP request.\r\n *\r\n * @returns {boolean} true if http-proxy should continue to pipe proxyRes to res.\r\n */\r\nfunction onProxyResponse(proxy, proxyReq, proxyRes, req, res) {\r\n  var requestState = req.corsAnywhereRequestState;\r\n\r\n  var statusCode = proxyRes.statusCode;\r\n\r\n  if (!requestState.redirectCount_) {\r\n    res.setHeader('x-request-url', requestState.location.href);\r\n  }\r\n  // Handle redirects\r\n  if (statusCode === 301 || statusCode === 302 || statusCode === 303 || statusCode === 307 || statusCode === 308) {\r\n    var locationHeader = proxyRes.headers.location;\r\n    var parsedLocation;\r\n    if (locationHeader) {\r\n      locationHeader = url.resolve(requestState.location.href, locationHeader);\r\n      parsedLocation = parseURL(locationHeader);\r\n    }\r\n    if (parsedLocation) {\r\n      if (statusCode === 301 || statusCode === 302 || statusCode === 303) {\r\n        // Exclude 307 & 308, because they are rare, and require preserving the method + request body\r\n        requestState.redirectCount_ = requestState.redirectCount_ + 1 || 1;\r\n        if (requestState.redirectCount_ <= requestState.maxRedirects) {\r\n          // Handle redirects within the server, because some clients (e.g. Android Stock Browser)\r\n          // cancel redirects.\r\n          // Set header for debugging purposes. Do not try to parse it!\r\n          res.setHeader('X-CORS-Redirect-' + requestState.redirectCount_, statusCode + ' ' + locationHeader);\r\n\r\n          req.method = 'GET';\r\n          req.headers['content-length'] = '0';\r\n          delete req.headers['content-type'];\r\n          requestState.location = parsedLocation;\r\n\r\n          // Remove all listeners (=reset events to initial state)\r\n          req.removeAllListeners();\r\n\r\n          // Remove the error listener so that the ECONNRESET \"error\" that\r\n          // may occur after aborting a request does not propagate to res.\r\n          // https://github.com/nodejitsu/node-http-proxy/blob/v1.11.1/lib/http-proxy/passes/web-incoming.js#L134\r\n          proxyReq.removeAllListeners('error');\r\n          proxyReq.once('error', function catchAndIgnoreError() {});\r\n          proxyReq.abort();\r\n\r\n          // Initiate a new proxy request.\r\n          proxyRequest(req, res, proxy);\r\n          return false;\r\n        }\r\n      }\r\n      proxyRes.headers.location = requestState.proxyBaseUrl + '/' + locationHeader;\r\n    }\r\n  }\r\n\r\n  // Strip cookies\r\n  delete proxyRes.headers['set-cookie'];\r\n  delete proxyRes.headers['set-cookie2'];\r\n\r\n  proxyRes.headers['x-final-url'] = requestState.location.href;\r\n  withCORS(proxyRes.headers, req);\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * @param req_url {string} The requested URL (scheme is optional).\r\n * @return {object} URL parsed using url.parse\r\n */\r\nfunction parseURL(req_url) {\r\n  var match = req_url.match(/^(?:(https?:)?\\/\\/)?(([^\\/?]+?)(?::(\\d{0,5})(?=[\\/?]|$))?)([\\/?][\\S\\s]*|$)/i);\r\n  //                              ^^^^^^^          ^^^^^^^^      ^^^^^^^                ^^^^^^^^^^^^\r\n  //                            1:protocol       3:hostname     4:port                 5:path + query string\r\n  //                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  //                                            2:host\r\n  if (!match) {\r\n    return null;\r\n  }\r\n  if (!match[1]) {\r\n    if (/^https?:/i.test(req_url)) {\r\n      // The pattern at top could mistakenly parse \"http:///\" as host=\"http:\" and path=///.\r\n      return null;\r\n    }\r\n    // Scheme is omitted.\r\n    if (req_url.lastIndexOf('//', 0) === -1) {\r\n      // \"//\" is omitted.\r\n      req_url = '//' + req_url;\r\n    }\r\n    req_url = (match[4] === '443' ? 'https:' : 'http:') + req_url;\r\n  }\r\n  var parsed = url.parse(req_url);\r\n  if (!parsed.hostname) {\r\n    // \"http://:1/\" and \"http:/notenoughslashes\" could end up here.\r\n    return null;\r\n  }\r\n  return parsed;\r\n}\r\n\r\n// Request handler factory\r\nfunction getHandler(options, proxy) {\r\n  var corsAnywhere = {\r\n    handleInitialRequest: null,     // Function that may handle the request instead, by returning a truthy value.\r\n    getProxyForUrl: getProxyForUrl, // Function that specifies the proxy to use\r\n    maxRedirects: 5,                // Maximum number of redirects to be followed.\r\n    originBlacklist: [],            // Requests from these origins will be blocked.\r\n    originWhitelist: [],            // If non-empty, requests not from an origin in this list will be blocked.\r\n    checkRateLimit: null,           // Function that may enforce a rate-limit by returning a non-empty string.\r\n    redirectSameOrigin: false,      // Redirect the client to the requested URL for same-origin requests.\r\n    requireHeader: null,            // Require a header to be set?\r\n    removeHeaders: [],              // Strip these request headers.\r\n    setHeaders: {},                 // Set these request headers.\r\n    corsMaxAge: 0,                  // If set, an Access-Control-Max-Age header with this value (in seconds) will be added.\r\n    helpFile: __dirname + '/help.txt',\r\n  };\r\n\r\n  Object.keys(corsAnywhere).forEach(function(option) {\r\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\r\n      corsAnywhere[option] = options[option];\r\n    }\r\n  });\r\n\r\n  // Convert corsAnywhere.requireHeader to an array of lowercase header names, or null.\r\n  if (corsAnywhere.requireHeader) {\r\n    if (typeof corsAnywhere.requireHeader === 'string') {\r\n      corsAnywhere.requireHeader = [corsAnywhere.requireHeader.toLowerCase()];\r\n    } else if (!Array.isArray(corsAnywhere.requireHeader) || corsAnywhere.requireHeader.length === 0) {\r\n      corsAnywhere.requireHeader = null;\r\n    } else {\r\n      corsAnywhere.requireHeader = corsAnywhere.requireHeader.map(function(headerName) {\r\n        return headerName.toLowerCase();\r\n      });\r\n    }\r\n  }\r\n  var hasRequiredHeaders = function(headers) {\r\n    return !corsAnywhere.requireHeader || corsAnywhere.requireHeader.some(function(headerName) {\r\n      return Object.hasOwnProperty.call(headers, headerName);\r\n    });\r\n  };\r\n\r\n  return function(req, res) {\r\n    req.corsAnywhereRequestState = {\r\n      getProxyForUrl: corsAnywhere.getProxyForUrl,\r\n      maxRedirects: corsAnywhere.maxRedirects,\r\n      corsMaxAge: corsAnywhere.corsMaxAge,\r\n    };\r\n\r\n    var cors_headers = withCORS({}, req);\r\n    if (req.method === 'OPTIONS') {\r\n      // Pre-flight request. Reply successfully:\r\n      res.writeHead(200, cors_headers);\r\n      res.end();\r\n      return;\r\n    }\r\n\r\n    var location = parseURL(req.url.slice(1));\r\n\r\n    if (corsAnywhere.handleInitialRequest && corsAnywhere.handleInitialRequest(req, res, location)) {\r\n      return;\r\n    }\r\n\r\n    if (!location) {\r\n      // Special case http:/notenoughslashes, because new users of the library frequently make the\r\n      // mistake of putting this application behind a server/router that normalizes the URL.\r\n      // See https://github.com/Rob--W/cors-anywhere/issues/238#issuecomment-629638853\r\n      if (/^\\/https?:\\/[^/]/i.test(req.url)) {\r\n        res.writeHead(400, 'Missing slash', cors_headers);\r\n        res.end('The URL is invalid: two slashes are needed after the http(s):.');\r\n        return;\r\n      }\r\n      // Invalid API call. Show how to correctly use the API\r\n      showUsage(corsAnywhere.helpFile, cors_headers, res);\r\n      return;\r\n    }\r\n\r\n    if (location.host === 'iscorsneeded') {\r\n      // Is CORS needed? This path is provided so that API consumers can test whether it's necessary\r\n      // to use CORS. The server's reply is always No, because if they can read it, then CORS headers\r\n      // are not necessary.\r\n      res.writeHead(200, {'Content-Type': 'text/plain'});\r\n      res.end('no');\r\n      return;\r\n    }\r\n\r\n    if (location.port > 65535) {\r\n      // Port is higher than 65535\r\n      res.writeHead(400, 'Invalid port', cors_headers);\r\n      res.end('Port number too large: ' + location.port);\r\n      return;\r\n    }\r\n\r\n    if (!/^\\/https?:/.test(req.url) && !isValidHostName(location.hostname)) {\r\n      // Don't even try to proxy invalid hosts (such as /favicon.ico, /robots.txt)\r\n      res.writeHead(404, 'Invalid host', cors_headers);\r\n      res.end('Invalid host: ' + location.hostname);\r\n      return;\r\n    }\r\n\r\n    if (!hasRequiredHeaders(req.headers)) {\r\n      res.writeHead(400, 'Header required', cors_headers);\r\n      res.end('Missing required request header. Must specify one of: ' + corsAnywhere.requireHeader);\r\n      return;\r\n    }\r\n\r\n    var origin = req.headers.origin || '';\r\n    if (corsAnywhere.originBlacklist.indexOf(origin) >= 0) {\r\n      res.writeHead(403, 'Forbidden', cors_headers);\r\n      res.end('The origin \"' + origin + '\" was blacklisted by the operator of this proxy.');\r\n      return;\r\n    }\r\n\r\n    if (corsAnywhere.originWhitelist.length && corsAnywhere.originWhitelist.indexOf(origin) === -1) {\r\n      res.writeHead(403, 'Forbidden', cors_headers);\r\n      res.end('The origin \"' + origin + '\" was not whitelisted by the operator of this proxy.');\r\n      return;\r\n    }\r\n\r\n    var rateLimitMessage = corsAnywhere.checkRateLimit && corsAnywhere.checkRateLimit(origin);\r\n    if (rateLimitMessage) {\r\n      res.writeHead(429, 'Too Many Requests', cors_headers);\r\n      res.end('The origin \"' + origin + '\" has sent too many requests.\\n' + rateLimitMessage);\r\n      return;\r\n    }\r\n\r\n    if (corsAnywhere.redirectSameOrigin && origin && location.href[origin.length] === '/' &&\r\n        location.href.lastIndexOf(origin, 0) === 0) {\r\n      // Send a permanent redirect to offload the server. Badly coded clients should not waste our resources.\r\n      cors_headers.vary = 'origin';\r\n      cors_headers['cache-control'] = 'private';\r\n      cors_headers.location = location.href;\r\n      res.writeHead(301, 'Please use a direct request', cors_headers);\r\n      res.end();\r\n      return;\r\n    }\r\n\r\n    var isRequestedOverHttps = req.connection.encrypted || /^\\s*https/.test(req.headers['x-forwarded-proto']);\r\n    var proxyBaseUrl = (isRequestedOverHttps ? 'https://' : 'http://') + req.headers.host;\r\n\r\n    corsAnywhere.removeHeaders.forEach(function(header) {\r\n      delete req.headers[header];\r\n    });\r\n\r\n    Object.keys(corsAnywhere.setHeaders).forEach(function(header) {\r\n      req.headers[header] = corsAnywhere.setHeaders[header];\r\n    });\r\n\r\n    req.corsAnywhereRequestState.location = location;\r\n    req.corsAnywhereRequestState.proxyBaseUrl = proxyBaseUrl;\r\n\r\n    proxyRequest(req, res, proxy);\r\n  };\r\n}\r\n\r\n// Create server with default and given values\r\n// Creator still needs to call .listen()\r\nexports.createServer = function createServer(options) {\r\n  options = options || {};\r\n\r\n  // Default options:\r\n  var httpProxyOptions = {\r\n    xfwd: true,            // Append X-Forwarded-* headers\r\n    secure: process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0',\r\n  };\r\n  // Allow user to override defaults and add own options\r\n  if (options.httpProxyOptions) {\r\n    Object.keys(options.httpProxyOptions).forEach(function(option) {\r\n      httpProxyOptions[option] = options.httpProxyOptions[option];\r\n    });\r\n  }\r\n\r\n  var proxy = httpProxy.createServer(httpProxyOptions);\r\n  var requestHandler = getHandler(options, proxy);\r\n  var server;\r\n  if (options.httpsOptions) {\r\n    server = require('https').createServer(options.httpsOptions, requestHandler);\r\n  } else {\r\n    server = require('http').createServer(requestHandler);\r\n  }\r\n\r\n  // When the server fails, just show a 404 instead of Internal server error\r\n  proxy.on('error', function(err, req, res) {\r\n    if (res.headersSent) {\r\n      // This could happen when a protocol error occurs when an error occurs\r\n      // after the headers have been received (and forwarded). Do not write\r\n      // the headers because it would generate an error.\r\n      // Prior to Node 13.x, the stream would have ended.\r\n      // As of Node 13.x, we must explicitly close it.\r\n      if (res.writableEnded === false) {\r\n        res.end();\r\n      }\r\n      return;\r\n    }\r\n\r\n    // When the error occurs after setting headers but before writing the response,\r\n    // then any previously set headers must be removed.\r\n    var headerNames = res.getHeaderNames ? res.getHeaderNames() : Object.keys(res._headers || {});\r\n    headerNames.forEach(function(name) {\r\n      res.removeHeader(name);\r\n    });\r\n\r\n    res.writeHead(404, {'Access-Control-Allow-Origin': '*'});\r\n    res.end('Not found because of proxy error: ' + err);\r\n  });\r\n\r\n  return server;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}